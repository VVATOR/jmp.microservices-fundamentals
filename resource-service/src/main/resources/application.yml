server:
  port: ${PORT:0}
  servlet:
    context-path: /

spring:
  application:
    name: resource-service

  banner:
    location: classpath:banner.txt

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

aws:
  s3:
    endpointUrl: ${AWS_ENDPOINT_URL}
    region: ${AWS_REGION}
    bucket: ${AWS_BUCKET}
    accessKey: ${AWS_USERNAME}
    secretKey: ${AWS_PASSWORD}

management:
  endpoints:
    web:
      exposure:
        include: info,health
      cors:
        allowed-methods: GET,PUT,POST,OPTIONS
        allowed-headers: origin,content-type,accept,clientinfo.clientid,clientinfo.instanceid,clientinfo.originip,clientinfo.version,securitytoken,clientinfo.domainversion,clientinfo.frameworkversion,clientinfo.instancetag,clientinfo.locale,clientinfo.operatingsystemname,clientinfo.runtimename,clientinfo.runtimeversion,clientinfo.timezone,correlationid,id
        allow-credentials: true
    enabled-by-default: true